{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","state","position","nextButtonIsDisabled","prevButtonIsDisabled","nextButtonHandler","props","images","frameSize","nextPosition","step","maxPosition","length","setState","updateButtonState","prevButtonHandler","this","imageSize","animationDuration","className","style","width","transform","transition","map","image","index","src","alt","type","onClick","disabled","React","Component","App","htmlFor","id","min","max","value","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f175eeca.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype State = {\n  position: number;\n  nextButtonIsDisabled: boolean;\n  prevButtonIsDisabled: boolean;\n};\n\ntype Props = {\n  images: string[],\n  frameSize: number;\n  imageSize: number;\n  animationDuration: number;\n  step: number;\n};\n\nclass Carousel extends React.Component<Props, State> {\n  state = {\n    position: 0,\n    nextButtonIsDisabled: false,\n    prevButtonIsDisabled: false,\n  };\n\n  componentDidMount() {\n    const { position } = this.state;\n\n    this.updateButtonState(position);\n  }\n\n  componentDidUpdate() {\n    const { position } = this.state;\n    const {\n      images,\n      frameSize,\n    } = this.props;\n\n    const maxPosition = (images.length - frameSize) * -1;\n\n    if (maxPosition > position) {\n      this.setState({ position: maxPosition });\n    }\n  }\n\n  nextButtonHandler = () => {\n    const {\n      position,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      step,\n    } = this.props;\n\n    const nextPosition = position - step;\n    const maxPosition = -(images.length - frameSize);\n\n    if (nextPosition >= maxPosition) {\n      this.setState({ position: nextPosition });\n      this.updateButtonState(nextPosition);\n    } else {\n      this.setState({\n        position: maxPosition,\n        nextButtonIsDisabled: true,\n      });\n    }\n  };\n\n  prevButtonHandler = () => {\n    const { position } = this.state;\n    const {\n      step,\n    } = this.props;\n\n    const nextPosition = position + step;\n    const minPosition = 0;\n\n    if (nextPosition <= minPosition) {\n      this.setState({ position: nextPosition });\n      this.updateButtonState(nextPosition);\n    } else {\n      this.setState({\n        position: minPosition,\n        prevButtonIsDisabled: true,\n      });\n    }\n  };\n\n  updateButtonState(position: number) {\n    const {\n      images,\n      frameSize,\n    } = this.props;\n\n    const minPosition = 0;\n    const maxPosition = -images.length + frameSize;\n\n    switch (true) {\n      case position === maxPosition:\n        this.setState({ nextButtonIsDisabled: true });\n        break;\n\n      case position === minPosition:\n        this.setState({ prevButtonIsDisabled: true });\n        break;\n\n      default:\n        this.setState({\n          prevButtonIsDisabled: false,\n          nextButtonIsDisabled: false,\n        });\n    }\n  }\n\n  render() {\n    const {\n      position,\n      nextButtonIsDisabled,\n      prevButtonIsDisabled,\n    } = this.state;\n\n    const {\n      images,\n      frameSize,\n      imageSize,\n      animationDuration,\n    } = this.props;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{\n          width: `${frameSize * imageSize}px`,\n        }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${position * imageSize}px)`,\n            transition: `${animationDuration}ms`,\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={`${image}_${index + 1}`}\n              className=\"Carousel__item\"\n            >\n              <img\n                src={image}\n                alt={`${index}`}\n                style={{\n                  width: `${imageSize}px`,\n                }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div\n          className=\"Carousel__buttons\"\n          style={{\n            width: imageSize * frameSize + imageSize,\n            transform: `translate(${imageSize / -2}px, ${-imageSize / 1.5}px)`,\n          }}\n        >\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.prevButtonHandler}\n            disabled={prevButtonIsDisabled}\n          >\n            {'<'}\n          </button>\n\n          <button\n            type=\"button\"\n            className=\"button\"\n            onClick={this.nextButtonHandler}\n            disabled={nextButtonIsDisabled}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n  frameSize: number;\n  imageSize: number;\n  animationDuration: number;\n  step: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    frameSize: 3,\n    imageSize: 130,\n    animationDuration: 300,\n    step: 1,\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      imageSize,\n      animationDuration,\n      step,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          frameSize={frameSize}\n          imageSize={imageSize}\n          animationDuration={animationDuration}\n          step={step}\n        />\n\n        <div\n          className=\"App__controller\"\n        >\n          <label\n            htmlFor=\"frameSize\"\n            className=\"App__controller--label\"\n          >\n            {'Frame size: '}\n            {frameSize}\n\n            <input\n              id=\"frameSize\"\n              type=\"range\"\n              min={1}\n              max={images.length}\n              step={1}\n              value={frameSize}\n              onChange={(e) => (\n                this.setState({ frameSize: +e.target.value })\n              )}\n            />\n          </label>\n\n          <label\n            htmlFor=\"imageSize\"\n            className=\"App__controller--label\"\n          >\n            {'Image size: '}\n            {imageSize}\n\n            <input\n              id=\"imageSize\"\n              type=\"range\"\n              min={50}\n              max={250}\n              step={10}\n              value={imageSize}\n              onChange={(e) => (\n                this.setState({ imageSize: +e.target.value })\n              )}\n            />\n          </label>\n\n          <label\n            htmlFor=\"animationDuration\"\n            className=\"App__controller--label\"\n          >\n            {'Animation duration: '}\n            {animationDuration}\n\n            <input\n              id=\"animationDuration\"\n              type=\"range\"\n              min={100}\n              max={1000}\n              step={100}\n              value={animationDuration}\n              onChange={(e) => (\n                this.setState({ animationDuration: +e.target.value })\n              )}\n            />\n          </label>\n\n          <label\n            htmlFor=\"step\"\n            className=\"App__controller--label\"\n          >\n            {'Step: '}\n            {step}\n\n            <input\n              id=\"animationDuration\"\n              type=\"range\"\n              min={1}\n              max={5}\n              step={1}\n              value={step}\n              onChange={(e) => (\n                this.setState({ step: +e.target.value })\n              )}\n            />\n          </label>\n\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}